# - *- coding: utf- 8 - *-
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

import math

from tgbot.data.config import BOT_NAME, CHANNEL_LINK, CHAT_LINK, FAQ_LINK, LICENCE_LINK, get_sub_url
from tgbot.services.api_sqlite import get_all_layers, get_all_likes, get_templatex

def main_keyboard_menu(user_id=False):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(text='üôáüèª‚Äç‚ôÇÔ∏è–ö–∞–Ω–∞–ª', url=CHANNEL_LINK),
                (InlineKeyboardButton(text='üí¨–ß–∞—Ç', url=CHAT_LINK)))
    keyboard.add(InlineKeyboardButton(text='üë®üèª‚Äçüè´FAQ', url=FAQ_LINK),
                (InlineKeyboardButton(text='üëÆ–°–æ–≥–ª–∞—à–µ–Ω–∏–µ', url=LICENCE_LINK)))
    keyboard.add(InlineKeyboardButton(text='‚òëÔ∏è –°–∫—Ä—ã—Ç—å', callback_data='hide_msg'))
    return keyboard

# def main_keyboard_menu(user_id):
#     keyboard = InlineKeyboardMarkup()
#     keyboard.add(InlineKeyboardButton(text='üéØ –ü—Ä–æ—Ñ–∏–ª—å', callback_data='my_profile'))
#     # keyboard.add(InlineKeyboardButton(text='üí¨ –ù–∞—à —á–∞—Ç', url='https://google.com'))
#     # keyboard.add(InlineKeyboardButton(text='üë• –ù–∞—à –∫–∞–Ω–∞–ª', url='t.me/test'))
#     # keyboard.add(InlineKeyboardButton(text="üìè –ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–∏—Å–∞", url='https://google.com'),
#     #              InlineKeyboardButton(text="üîº FAQ", url='https://google.com'))
#     keyboard.add(InlineKeyboardButton(text='üöÄ –®–∞–±–ª–æ–Ω—ã', callback_data='choose_country'))

#     if user_id in get_admins():
#         keyboard.add(InlineKeyboardButton(text='üéõ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å', callback_data='admin_panel'))

#     return keyboard

def hide_message_keyboard(text='Cancel'):
    keyboard = InlineKeyboardMarkup()
    if text == 'Cancel':
        keyboard.add(InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', callback_data='hide_msg'))
    if text == 'Hide':
        keyboard.add(InlineKeyboardButton(text='‚úÖ –ì–æ—Ç–æ–≤–æ', callback_data='hide_msg'))
    if text == 'Hide_this':
        keyboard.add(InlineKeyboardButton(text='‚òëÔ∏è –°–∫—Ä—ã—Ç—å', callback_data='hide_msg'))

    return keyboard

def profile_keyboard_menu():
    keyboard = InlineKeyboardMarkup()
    # keyboard.add(InlineKeyboardButton(text='üîé –ú–æ–∏ —à–∞–±–ª–æ–Ω—ã', callback_data='my_custom_templates'))
    keyboard.add(InlineKeyboardButton(text='üìÇ –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω', callback_data='create_my_custom_template'))
    keyboard.add(InlineKeyboardButton(text='‚≠êÔ∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ', callback_data='my_favorite'))
    keyboard.add(InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='back_to_main_menu'))
    
    return keyboard


def edit_my_tempalte_keyboard(template_id, show_all=True, remover=0):
    keyboard = InlineKeyboardMarkup()
    if show_all:
        get_categories = get_all_layers(template_id)
        if get_categories:
            if remover >= len(get_categories): remover -= 5
            for count, a in enumerate(range(remover, len(get_categories))):
                if count < 5:
                    keyboard.add(InlineKeyboardButton(get_categories[a]['layer_name'],
                                    callback_data=f"show_layers:{get_categories[a]['layer_id']}:{get_categories[a]['template_id']}"))

            if len(get_categories) <= 5:
                pass
            elif len(get_categories) > 5 and remover < 5:
                keyboard.add(
                    InlineKeyboardButton(f"1/{math.ceil(len(get_categories) / 5)}", callback_data="..."),
                    InlineKeyboardButton("‚ñ∂Ô∏è", callback_data=f"next_layers:{remover + 5}:{get_categories[a]['template_id']}"),
                )
            elif remover + 5 >= len(get_categories):
                keyboard.add(
                    InlineKeyboardButton("‚óÄÔ∏è", callback_data=f"next_layers:{remover - 5}:{get_categories[a]['template_id']}"),
                    InlineKeyboardButton(f"{str(int((remover + 5)/5))}/{math.ceil(len(get_categories) / 5)}", callback_data="..."),
                )
            else:
                keyboard.add(
                    InlineKeyboardButton("‚óÄÔ∏è", callback_data=f"next_layers:{remover - 5}:{get_categories[a]['template_id']}"),
                    InlineKeyboardButton(f"{str(int((remover + 5)/5))}/{math.ceil(len(get_categories) / 5)}", callback_data="..."),
                    InlineKeyboardButton("‚ñ∂Ô∏è", callback_data=f"next_layers:{remover + 5}:{get_categories[a]['template_id']}"),
                )

        keyboard.add(InlineKeyboardButton(text='‚úèÔ∏è –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–π', callback_data=f'add_new_layer:{template_id}'),
                     InlineKeyboardButton(text='üß© –î–æ–±–∞–≤–∏—Ç—å QR',callback_data=f'add_new_layer:{template_id}:QR'))

        keyboard.add(InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å', callback_data=f'delete_template:{template_id}'),
                     InlineKeyboardButton(text='üñº –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä', callback_data=f'prescreem_with_layers:{template_id}:{0}'))
        keyboard.add(InlineKeyboardButton(text='‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data=f'template_ready:{template_id}'))
    else:
        keyboard.add(InlineKeyboardButton(text='‚úèÔ∏è –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–π', callback_data=f'add_new_layer:{template_id}'))
        keyboard.add(InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å', callback_data=f'delete_template:{template_id}'))


    return keyboard

def edit_layer_keyboard(layer_id, template_id, align_center, align_right, qr = None):
    data = {1: 'üü¢', 0: 'üî¥'}
    keyboard = InlineKeyboardMarkup()
    if not qr:
        keyboard.add(InlineKeyboardButton(text='üè∑ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ', callback_data=f'edit_layer:name:{layer_id}'),
                        InlineKeyboardButton(text='üîé –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞', callback_data=f'edit_layer:font_size:{layer_id}'))

        keyboard.add(InlineKeyboardButton(text='üî§ –ò–∑–º–µ–Ω–∏—Ç—å —à—Ä–∏—Ñ—Ç', callback_data=f'edit_layer:font:{layer_id}'),
                        InlineKeyboardButton(text='üåà –ò–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç', callback_data=f'edit_layer:color:{layer_id}'))
    if qr:
        keyboard.add(InlineKeyboardButton(text='üîé –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–∑–º–µ—Ä QR', callback_data=f'edit_layer:font_size:{layer_id}'))

    keyboard.add(InlineKeyboardButton(text='üåê –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã', callback_data=f'edit_layer:coordinates:{layer_id}'))
    keyboard.add(InlineKeyboardButton(text=f'{data.get(align_center)} –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ —Ü–µ–Ω—Ç—Ä—É', callback_data=f'change_layer_align:center:{template_id}:{layer_id}'))
    keyboard.add(InlineKeyboardButton(text=f'{data.get(align_right)} –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é', callback_data=f'change_layer_align:right:{template_id}:{layer_id}'))

    keyboard.add(InlineKeyboardButton(text='üñº –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä', callback_data=f'prescreem_with_layers:{template_id}:{layer_id}'),
                    InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å', callback_data=f'delete_layer:{template_id}:{layer_id}'),
                    InlineKeyboardButton(text='‚úÖ –ì–æ—Ç–æ–≤–æ', callback_data=f'layer_is_ready:{template_id}:{layer_id}'))

    return keyboard

def use_template_menu(template_id, country_id, category_id, file_name, user_id, fav=None, profile=None):
    count_likes = get_all_likes(template_id)
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(text='üñå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å', callback_data=f'user_use_template:{template_id}:{file_name}'))
    if fav:
        keyboard.add(InlineKeyboardButton(text='üåè –ü–æ–¥–µ–ª–∏—Ç—å—Å—è', switch_inline_query=f't.me/{BOT_NAME}/?start={template_id}_{file_name}_{country_id}'),
                    InlineKeyboardButton(text='‚≠êÔ∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ', callback_data=f'add_to_favorite:{template_id}:{country_id}:{category_id}:{file_name}'))
    else:
        keyboard.add(InlineKeyboardButton(text='üåè –ü–æ–¥–µ–ª–∏—Ç—å—Å—è', switch_inline_query=f't.me/{BOT_NAME}/?start={template_id}_{file_name}_{country_id}'),
                    InlineKeyboardButton(text='‚≠êÔ∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ', callback_data=f'add_to_favorite:{template_id}:{country_id}:{category_id}:{file_name}'))
    if get_templatex(creator_id=user_id, template_id=template_id):
        keyboard.add(InlineKeyboardButton(text='‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'edit_my_template:{template_id}'),
                    (InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å', callback_data=f'delete_template:{template_id}')))
    keyboard.add(InlineKeyboardButton(text=f'‚ù§Ô∏è {count_likes}', callback_data=f'like_this_template:{template_id}:{country_id}:{category_id}:{file_name}'))
    if profile:
        keyboard.add(InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data=f'my_profile'))
    else:
        keyboard.add(InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data=f'show_all_templates_to_drawing:{country_id}:{category_id}'))
    return keyboard


def edit_coordinates_pre_screen_kb(layer_id, width, height):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(text=f'‚úÖ –î–∞', callback_data=f'set_coordinates:{layer_id}:{width}:{height}'),
                (InlineKeyboardButton(text=f'‚ùå –ù–µ—Ç', callback_data=f'hide_msg')))
    
    return keyboard


def create_user_template_custom(country_id, category_id):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(text=f'‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data=f'add_new_template_in_select_category:{country_id}:{category_id}'))
    keyboard.add(InlineKeyboardButton(text=f'‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', callback_data=f'hide_msg'))
    return keyboard


def check_template_admin(template_id):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(text=f'‚úÖ –û–¥–æ–±—Ä–∏—Ç—å', callback_data=f'accept_template_admin:{template_id}'))
    keyboard.add(InlineKeyboardButton(text=f'‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data=f'hide_msg'))
    return keyboard
    

def sub_keyboard():
    keyboard = InlineKeyboardMarkup()
    chats = get_sub_url()
    for chat in chats:
        keyboard.add(InlineKeyboardButton(text=f'üîó –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url=chat))
    keyboard.add(InlineKeyboardButton(text=f'‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è', callback_data='check_me'))
    return keyboard